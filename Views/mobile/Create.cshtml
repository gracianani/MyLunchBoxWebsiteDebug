@model MyLunchBox.Models.CustomBentoBoxViewModel

@{
    ViewBag.Title = "Fill Your Lunchbox";
    Layout = "~/Views/Shared/_MobileMaster.cshtml";
}

<div data-role="panel" id="dishSummary">
        <!-- panel content goes here -->
       <a href="#dishSummary" data-rel="close">Close panel</a>
	<table data-role="table" id="lunchbox" data-mode="columntoggle" class="table-stroke">
  <thead>
    <tr>
      <th>Dish</th>
      <th>Price</th>
    </tr>
  </thead>
  <tbody>
    @foreach (MyLunchBox.Models.DishType dishType in Model.AvailableDishes.Keys)
    {
    <tr><td class="courseTyepTd" colspan="2">@Extension.ExtensionMethods.GetDescription(dishType)</td></tr>
    	var count = 0;
        foreach (var customBentoBoxItem in @Model.CurrentCustomBentoBox.CustomBentoBoxItems.Where(i => i.Dish.DishTypeId == (int)dishType))
        {
        count += 1;
        <tr class="lunchbox-filledItem lunchbox-@Enum.GetName(typeof(MyLunchBox.Models.DishType), dishType)" data-id="@customBentoBoxItem.DishId" data-customBentoBoxId='@customBentoBoxItem.CustomBentoBoxId'>
        <td><a data-role="button" data-icon="delete" data-iconpos="notext" data-mini="true" data-inline="true">Delete</a> <img src="../../@customBentoBoxItem.Dish.DishImageUrl"> @customBentoBoxItem.Dish.DishName </td>
                                @if (customBentoBoxItem.Dish.DishTypeId == (int)MyLunchBox.Models.DishType.Drink)
                                {
                                    <td class="lunchbox-filledNum">X <input type="text" value="1" class="input-mini"/><text>=</text> <span class="lunchbox-filledPrice">$@customBentoBoxItem.Dish.DishIncrementalPrice</span></td>
                                } else if (@customBentoBoxItem.Dish.DishIncrementalPrice > 0 ) {
                                	<td class="lunchbox-filledPrice">+ $@customBentoBoxItem.Dish.DishIncrementalPrice</td>
                                }
          </tr> 
          }
          while (count < Model.CurrentCustomBentoBox.BentoBox.NumOfDishesInDishType(dishType))
          {
               count = count + 1;
               <tr class="lunchbox-emptyItem lunchbox-@Enum.GetName(typeof(MyLunchBox.Models.DishType), dishType)"><td colspan="2">Empty</td></tr>
          }
     }
    </tbody>
</table>
</div><!-- /panel -->
<div data-role="content">
    <ul class="createBentoProgress">
            <li>
            <span class="ui-icon ui-icon-check">&nbsp;</span>
            <a class="prev" href="/CustomBentoBox/ChooseRestaurant/">Restaurant</a>  &raquo; </li>
            <li>
            <span class="ui-icon ui-icon-check">&nbsp;</span>
            <a class="prev">LunchBox</a> &raquo; </li>
            <li>
            <span class="ui-icon ui-icon-edit">&nbsp;</span>
            <a class="current">Dishes</a> &raquo;</li>
            <li><a>CheckOut</a></li>
    </ul>
	<h3>Fill Your Lunchbox</h3>



@using (Html.BeginForm("AddToCart", "Mobile", FormMethod.Post, new { id="lunchBox" } ))
{
    @Html.ValidationSummary(true)
    <input id="customBentoBoxId" type="hidden" name="customBentoBoxId" value="@Model.CurrentCustomBentoBox.CustomBentoBoxId" />
            <input id="recipe" type="hidden" name="recipe" value="@Model.CurrentCustomBentoBox.EncodedRecipe"/>
            <input id="customBentoBoxName" type="text" name="customBentoBoxName" value="My Lunchbox" />

    <ul id="warningMsg" class="alert alert-block fade in " style="display:none"><button type="button" class="close" data-dismiss="alert">&times;</button></ul>

            
            <ul data-role="listview">
                @foreach (MyLunchBox.Models.DishType dishType in Model.AvailableDishes.Keys)
                {
                    var dishes = Model.AvailableDishes[dishType];
                    
                    <li  data-role="list-divider" data-theme="a">
                    @Extension.ExtensionMethods.GetDescription(dishType)
                    <span class="ui-li-count">0 / @Model.CurrentCustomBentoBox.BentoBox.NumOfDishesInDishType(dishType)</span></li>
                    foreach (var dish in dishes)
                    {
                        if (dish.DishStatusId == (int)MyLunchBox.Models.DishStatusLevel.Available)
                        {
                        <li class="course" data-type="@Enum.GetName(typeof(MyLunchBox.Models.DishType), dish.DishTypeId)"  data-dishId="@dish.DishId"  data-customBentoBoxId="@Model.CurrentCustomBentoBox.CustomBentoBoxId" data-price="@dish.DishIncrementalPrice" data-icon="check">
                        <a href="javascript:void(0)">
                        <img src="../../@dish.DishImageUrl" />
                        <h4 class="dishName">@dish.DishName </h4>
                        

                        @if (dish.DishIncrementalPrice > 0)
                        {
                        	<p class="ui-li-desc"><span class="price">+ $ @dish.DishIncrementalPrice</span> </p>
                        }
                          </a>
                        </li>
                        }
                    }
                }
             </ul>    
}
</div>
<div><!--/content-->
<div data-role="footer" data-position="fixed">
	<div data-role="navbar" data-iconpos="top">
		<ul>
            <li id="lunchboxSummary"><a href="#dishSummary" data-theme="b" data-icon="grid"><big>$6.99</big> <small>view summary</small></a></li>
			<li><a href="a.html" data-theme="b" data-icon="arrow-r">Add To Cart</a></li>
		</ul>
	</div><!-- /navbar -->
</div> 
<!-- /footer -->
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">

    $(document).bind('pageinit',function(){
        // Document.ready -> link up remove event handler
        $(".course").click(onCourseClicked);

        //$(".lunchboxBody").on('click', '.icon-remove', onRemoveFromBoxClicked);
        //$(".lunchboxBody").on('change', '.lunchbox-filledNum input', onChangeDishNum);

        /*
		$("#dishTypeSelector a").click(function () {
            var activateClass = $(this).attr("data-activeClass");
            $("#allDishes > li.active").removeClass("active");
            $("#allDishes > li").filter('.' + activateClass).addClass("active");
        });
		

        $("#btnAddToCart").click(function () {
            // isBentoBoxErrorFree({ "success": function () { $("#lunchBox").submit(); } });
            $("#lunchBox").submit(); 
        });
		*/
    });
	function onCourseClicked(){
		if ( $(this).hasClass('selected')){
			
		} else {
			onAddToBox.apply(this);
		}
	}
    function onAddToBox() {

        var $this = $(this);
        var dish = $this.attr("data-dishId");
        var dishImg = $this.find("img");
        var dishType = $this.attr("data-type");
        var dishName = $this.find('.dishName').text();
        var dishJSON = { "id": dish, "type": dishType, "name": dishName, "img": dishImg.attr("src") };

        var desc = $("#lunchboxSummary");
        var recipe = $("#recipe");
        if (dish != '') {
            $.post("/CustomBentoBox/AddToCurrentBox/", { "dishId": dish, "encodedRecipe": recipe.val() },
                    function (data) {
                        if (data.isValid) {
                            selectCourse.call(this,$this,dishJSON);

                            setWarningMsgType('success');
                            displayWarningMsg(data.warningMsg, "<strong>Well done!</strong> You successfully added a dish.");
                            showTotalPrice(data.unitPrice);
                        } else {
                            setWarningMsgType('warning');
                            displayWarningMsg(data.warningMsg, "<strong>Sorry!</strong>");
                        }
                        recipe.val(data.encodedRecipe);


                    });
        }
    }

    function onRemoveFromBoxClicked() {
        var dish = $(this).parent().attr("data-id");

        var recipe = $("#recipe");
        if (dish != '') {
            $.post("/CustomBentoBox/RemoveFromCurrentBox/", { "dishId": dish, "encodedRecipe": recipe.val() },
                function (data) {
                    setWarningMsgType('success');
                    displayWarningMsg(data.warningMsg, "<strong>Well Done!</strong> You successfully removed a dish.");
                    unselectCourse({ id: dish });
                    recipe.val(data.encodedRecipe);
                    setTotalPrice(data.unitPrice);
                });
        }
    }

    function isBentoBoxErrorFree(params) {
        if ($(".lunchbox-emptyItem:visible").size() > 0) {
            setWarningMsgType("warning");
            displayWarningMsg([], "Your bento box haven't finished yet.")
            $('#warningMsg').focus();
            return;
        }
        if ($('#locations').size() > 0) {
            setWarningMsgType("error");
            displayWarningMsg([], "Please select a deliver location&time.");
            $('#locations').focus();
            return;
        }
        var recipe = $("#recipe");
        $.post("/CustomBentoBox/IsBentoBoxErrorFree", { "encodedRecipe": recipe.val() },
            function (data) {
                if (!data.isValid) {
                    setWarningMsgType('warning');
                    displayWarningMsg(data.warningMsg, "<strong>Your bento box haven't finished yet</strong> ");
                    showTotalPrice(data.unitPrice);
                }
                else {
                    params.success();
                }
            }
        );
    }

    var unselectCourse = function (courseJSON) {
        var course = $('.course[data-dishId="' + courseJSON.id + '"]');
        var li = $('.lunchbox-filledItem[data-id="' + courseJSON.id + '"]');
        var type = course.attr('data-type');
        if (type == 'Drink') {
            li.remove();
        } else {
            li.html('').removeClass('lunchbox-filledItem').addClass('lunchbox-emptyItem');
        }
        course.removeClass('selected');
    }
    var selectCourse = function (course, courseJSON) {
		course.addClass('selected');
		
        var list = $('.lunchbox-' + courseJSON.type);
		console.log(list);
        if (courseJSON.type == 'Drink') {
            price = parseFloat(course.attr('data-price'));
            list.append('<li class="lunchbox-filledItem" data-id="' + courseJSON.id + '" data-price="' + price + '"><i class="icon-remove icon-brown" title="Remove" rel="tooltip"></i> <img src="' + courseJSON.img + '" />' + courseJSON.name + '<span class="lunchbox-filledNum">X <input type="text" value="' + '1' + '" class="input-mini"/></span> = <span class="lunchbox-filledPrice">$ ' + price + '</span>' + '</li>').removeClass('lunchbox-emptyItem').addClass('lunchbox-filledItem');
        } else {
            var emptyItem = list.filter(".lunchbox-emptyItem");
            $(emptyItem[0]).html('<td colspan="2"><a data-role="button" data-icon="delete" data-iconpos="notext" data-mini="true" data-inline="true" data-corners="true" data-shadow="true" data-iconshadow="true" data-wrapperels="span" data-theme="a" title="Delete" class="ui-btn ui-shadow ui-btn-corner-all ui-mini ui-btn-inline ui-btn-icon-notext ui-btn-up-a"><span class="ui-btn-inner"><span class="ui-btn-text">Delete</span><span class="ui-icon ui-icon-delete ui-icon-shadow">&nbsp;</span></span></a><img class="lunchbox-dishimg" src="' + courseJSON.img + '"> ' + courseJSON.name + '</td>').removeClass('lunchbox-emptyItem').addClass('lunchbox-filledItem').attr('data-id', courseJSON.id);

        }
    }
    function addTotalPrice(price) {
        var totalPrice = parseFloat($('#lunchboxPrice').attr('data-price')) + price;
        showTotalPrice(totalPrice);

    }
    function showTotalPrice(totalPrice) {
        var price = $('#lunchboxPrice');
        price.attr('data-price', totalPrice);
        price.html('$' + totalPrice.toString().slice(0, -3) + '.<small>' + totalPrice.toString().slice(-2) + '</small>');
    }

    function onChangeDishNum() {
        var quantity;
        var item = $(this).parent().parent();
        var recipe = $("#recipe");
        var id = item.attr('data-id');
        var unitPrice = parseFloat($(".course[data-dishId='" + id + "']").attr('data-price'));

        quantity = parseInt($(this).val());

        if (quantity > 0 && id != '') {
            //todo: post changes
            $.post("/CustomBentoBox/ChangeQuantity/", { "dishId": id, "dishQuantity": quantity, "encodedRecipe": recipe.val() },
                function (data) {
                    var price = unitPrice * quantity;
                    price = Math.round(price * 100) / 100;

                    item.attr('data-price', price).find(".lunchbox-filledPrice").html('$' + price);
                    setWarningMsgType("success");
                    displayWarningMsg([], "<strong>Well Done!</strong> You successfully changed the quantity.");
                    recipe.val(data.encodedRecipe);
                    showTotalPrice(data.unitPrice);

                });

        } else {
            setWarningMsgType("error");
            displayWarningMsg([], "<strong>Error!</strong> Check quantity.")
        }

    }

    function displayWarningMsg(warningMsgs, title) {
        var warningMsg = $("#warningMsg");
        warningMsg.html('');
        if (title != undefined) {
            warningMsg.append("<li>" + title + "</li>");
        }

        $.each(warningMsgs, function (index, item) {
            console.log(item);
            warningMsg.append("<li>" + item + "</li>");
        });
        if (title == undefined && warningMsgs.length < 1) {
            warningMsg.alert('close');
        } else {
           //warningMsg.slideDown().alert();
        }
    }
    function setWarningMsgType(type) {
        $("#warningMsg").attr('class', 'alert alert-block').addClass('alert-' + type);
    }

</script>
